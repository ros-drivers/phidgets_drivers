diff -urp libphidget22-1.6.20200417.orig/configure libphidget22-1.6.20200417/configure
--- libphidget22-1.6.20200417.orig/configure	2020-04-17 21:51:11.000000000 +0000
+++ libphidget22-1.6.20200417/configure	2020-06-02 13:31:26.487312313 +0000
@@ -5678,7 +5678,7 @@ esac
 fi
 
 : ${AR=ar}
-: ${AR_FLAGS=cru}
+: ${AR_FLAGS=cr}
 
 
 
diff -urp libphidget22-1.6.20200417.orig/src/class/dataadapter.gen.c libphidget22-1.6.20200417/src/class/dataadapter.gen.c
--- libphidget22-1.6.20200417.orig/src/class/dataadapter.gen.c	2020-04-17 21:50:42.000000000 +0000
+++ libphidget22-1.6.20200417/src/class/dataadapter.gen.c	2020-06-02 13:26:36.101638546 +0000
@@ -46,137 +46,6 @@ struct _PhidgetDataAdapter {
 };
 
 static PhidgetReturnCode CCONV
-_setStatus(PhidgetChannelHandle phid, BridgePacket *bp) {
-	PhidgetDataAdapterHandle ch;
-	int version;
-
-	ch = (PhidgetDataAdapterHandle)phid;
-
-	version = getBridgePacketUInt32ByName(bp, "_class_version_");
-	if (version != 3) {
-		loginfo("%"PRIphid": server/client class version mismatch: %d != 3 - functionality may be limited.", phid, version);
-	}
-
-	if(version >= 3)
-		ch->responseReceived = getBridgePacketInt32ByName(bp, "responseReceived");
-	if(version >= 3)
-		memcpy(&ch->lastData, getBridgePacketUInt8ArrayByName(bp, "lastData"), sizeof (uint8_t) * 8192);
-	if(version >= 3)
-		ch->lastDataIndex = getBridgePacketUInt32ByName(bp, "lastDataIndex");
-	if(version >= 3)
-		memcpy(&ch->eventData, getBridgePacketUInt8ArrayByName(bp, "eventData"), sizeof (uint8_t) * 8192);
-	if(version >= 3)
-		ch->lastDataLen = getBridgePacketUInt32ByName(bp, "lastDataLen");
-	if(version >= 3)
-		ch->lastDataError = getBridgePacketUInt32ByName(bp, "lastDataError");
-	if(version >= 3)
-		memcpy(&ch->I2CFormat, getBridgePacketUInt8ArrayByName(bp, "I2CFormat"), sizeof (char) * 2049);
-	if(version >= 3)
-		ch->lastDataRead = getBridgePacketInt32ByName(bp, "lastDataRead");
-	if(version >= 3)
-		ch->baudRate = getBridgePacketUInt32ByName(bp, "baudRate");
-	if(version >= 3)
-		ch->minBaudRate = getBridgePacketUInt32ByName(bp, "minBaudRate");
-	if(version >= 3)
-		ch->maxBaudRate = getBridgePacketUInt32ByName(bp, "maxBaudRate");
-	if(version >= 3)
-		ch->dataBits = getBridgePacketUInt32ByName(bp, "dataBits");
-	if(version >= 3)
-		ch->minDataBits = getBridgePacketUInt32ByName(bp, "minDataBits");
-	if(version >= 3)
-		ch->maxDataBits = getBridgePacketUInt32ByName(bp, "maxDataBits");
-	if(version >= 3)
-		ch->deviceAddress = getBridgePacketUInt32ByName(bp, "deviceAddress");
-	if(version >= 3)
-		ch->handshakeMode = getBridgePacketInt32ByName(bp, "handshakeMode");
-	if(version >= 3)
-		ch->endianness = getBridgePacketInt32ByName(bp, "endianness");
-	if(version >= 3)
-		ch->IOVoltage = getBridgePacketInt32ByName(bp, "IOVoltage");
-	if(version >= 3)
-		ch->maxPacketLength = getBridgePacketUInt32ByName(bp, "maxPacketLength");
-	if(version >= 3)
-		ch->parity = getBridgePacketInt32ByName(bp, "parity");
-	if(version >= 3)
-		ch->protocol = getBridgePacketInt32ByName(bp, "protocol");
-	if(version >= 3)
-		ch->SPIMode = getBridgePacketInt32ByName(bp, "SPIMode");
-	if(version >= 3)
-		ch->stopBits = getBridgePacketInt32ByName(bp, "stopBits");
-	if(version >= 3)
-		ch->timeout = getBridgePacketUInt32ByName(bp, "timeout");
-	if(version >= 3)
-		ch->minTimeout = getBridgePacketUInt32ByName(bp, "minTimeout");
-	if(version >= 3)
-		ch->maxTimeout = getBridgePacketUInt32ByName(bp, "maxTimeout");
-
-	return (EPHIDGET_OK);
-}
-
-static PhidgetReturnCode CCONV
-_getStatus(PhidgetChannelHandle phid, BridgePacket **bp) {
-	PhidgetDataAdapterHandle ch;
-
-	ch = (PhidgetDataAdapterHandle)phid;
-
-	return (createBridgePacket(bp, 0, "_class_version_=%u"
-	  ",responseReceived=%d"
-	  ",lastData=%8192R"
-	  ",lastDataIndex=%u"
-	  ",eventData=%8192R"
-	  ",lastDataLen=%u"
-	  ",lastDataError=%u"
-	  ",I2CFormat=%2049R"
-	  ",lastDataRead=%d"
-	  ",baudRate=%u"
-	  ",minBaudRate=%u"
-	  ",maxBaudRate=%u"
-	  ",dataBits=%u"
-	  ",minDataBits=%u"
-	  ",maxDataBits=%u"
-	  ",deviceAddress=%u"
-	  ",handshakeMode=%d"
-	  ",endianness=%d"
-	  ",IOVoltage=%d"
-	  ",maxPacketLength=%u"
-	  ",parity=%d"
-	  ",protocol=%d"
-	  ",SPIMode=%d"
-	  ",stopBits=%d"
-	  ",timeout=%u"
-	  ",minTimeout=%u"
-	  ",maxTimeout=%u"
-	  ,3 /* class version */
-	  ,ch->responseReceived
-	  ,ch->lastData
-	  ,ch->lastDataIndex
-	  ,ch->eventData
-	  ,ch->lastDataLen
-	  ,ch->lastDataError
-	  ,ch->I2CFormat
-	  ,ch->lastDataRead
-	  ,ch->baudRate
-	  ,ch->minBaudRate
-	  ,ch->maxBaudRate
-	  ,ch->dataBits
-	  ,ch->minDataBits
-	  ,ch->maxDataBits
-	  ,ch->deviceAddress
-	  ,ch->handshakeMode
-	  ,ch->endianness
-	  ,ch->IOVoltage
-	  ,ch->maxPacketLength
-	  ,ch->parity
-	  ,ch->protocol
-	  ,ch->SPIMode
-	  ,ch->stopBits
-	  ,ch->timeout
-	  ,ch->minTimeout
-	  ,ch->maxTimeout
-	));
-}
-
-static PhidgetReturnCode CCONV
 _bridgeInput(PhidgetChannelHandle phid, BridgePacket *bp) {
 	PhidgetDataAdapterHandle ch;
 	PhidgetReturnCode res;
diff -urp libphidget22-1.6.20200417.orig/src/class/distancesensor.gen.c libphidget22-1.6.20200417/src/class/distancesensor.gen.c
--- libphidget22-1.6.20200417.orig/src/class/distancesensor.gen.c	2020-04-17 21:50:46.000000000 +0000
+++ libphidget22-1.6.20200417/src/class/distancesensor.gen.c	2020-06-02 13:27:20.497435784 +0000
@@ -228,8 +228,8 @@ _initAfterOpen(PhidgetChannelHandle phid
 		MOS_PANIC("Unsupported Channel");
 	}
 
-	memset(ch->amplitudes, '\0', 8);
-	memset(ch->distances, '\0', 8);
+	memset(ch->amplitudes, '\0', sizeof(uint32_t) * 8);
+	memset(ch->distances, '\0', sizeof(uint32_t) * 8);
 	ch->count = 0;
 
 	return (ret);
diff -urp libphidget22-1.6.20200417.orig/src/device/dataadapterdevice.c libphidget22-1.6.20200417/src/device/dataadapterdevice.c
--- libphidget22-1.6.20200417.orig/src/device/dataadapterdevice.c	2020-04-17 21:50:41.000000000 +0000
+++ libphidget22-1.6.20200417/src/device/dataadapterdevice.c	2020-06-02 13:28:12.385198805 +0000
@@ -699,25 +699,3 @@ PhidgetReturnCode sendDataBuffer(Phidget
 	}
 	return ret;
 }
-
-
-//CRC16 function found from https://ctlsys.com/support/how_to_compute_the_modbus_rtu_message_crc/
-// Compute the MODBUS RTU CRC
-uint16_t ModRTU_CRC(uint8_t *buf, uint16_t len)
-{
-	uint16_t crc = 0xFFFF;
-
-	for (uint16_t pos = 0; pos < len; pos++) {
-		crc ^= (uint16_t)buf[pos];          // XOR byte into least sig. byte of crc
-
-		for (int i = 8; i != 0; i--) {    // Loop over each bit
-			if ((crc & 0x0001) != 0) {      // If the LSB is set
-				crc >>= 1;                    // Shift right and XOR 0xA001
-				crc ^= 0xA001;
-			} else                            // Else LSB is not set
-				crc >>= 1;                    // Just shift right
-		}
-	}
-	// Note, this number has low and high bytes swapped, so use it accordingly (or swap bytes)
-	return crc;
-}
diff -urp libphidget22-1.6.20200417.orig/src/device/genericdevice.c libphidget22-1.6.20200417/src/device/genericdevice.c
--- libphidget22-1.6.20200417.orig/src/device/genericdevice.c	2020-04-17 21:50:41.000000000 +0000
+++ libphidget22-1.6.20200417/src/device/genericdevice.c	2020-06-02 13:28:50.317025565 +0000
@@ -104,7 +104,7 @@ PhidgetGenericDevice_bridgeInput(Phidget
 		case PHIDUID_GENERIC_PHIDUSB:
 			len = getBridgePacketArrayLen(bp, 2);
 
-			if (len > (int)phid->OUTPacketLength[0])
+			if (len > (size_t)phid->OUTPacketLength[0])
 				return (EPHIDGET_INVALIDARG);
 
 			return (PhidgetDevice_transferpacket(bp->iop, (PhidgetDeviceHandle)phid, PHIDGETUSB_REQ_CHANNEL_WRITE,
@@ -120,7 +120,7 @@ PhidgetGenericDevice_bridgeInput(Phidget
 		case PHIDUID_GENERIC_PHIDUSB:
 			len = getBridgePacketArrayLen(bp, 1);
 
-			if (len > (int)phid->OUTPacketLength[0])
+			if (len > (size_t)phid->OUTPacketLength[0])
 				return (EPHIDGET_INVALIDARG);
 
 			return (PhidgetDevice_transferpacket(bp->iop, (PhidgetDeviceHandle)phid, PHIDGETUSB_REQ_DEVICE_WRITE,
@@ -136,8 +136,8 @@ PhidgetGenericDevice_bridgeInput(Phidget
 		case PHIDUID_GENERIC_PHIDUSB:
 			len = getBridgePacketInt32(bp, 2);
 
-			if (len > (int)phid->OUTPacketLength[0])
-				len = (int)phid->OUTPacketLength[0];
+			if (len > (size_t)phid->OUTPacketLength[0])
+				len = (size_t)phid->OUTPacketLength[0];
 
 			ret = PhidgetDevice_transferpacket(bp->iop, (PhidgetDeviceHandle)phid, PHIDGETUSB_REQ_CHANNEL_READ,
 				getBridgePacketInt32(bp, 0), getBridgePacketInt32(bp, 1),
@@ -170,8 +170,8 @@ PhidgetGenericDevice_bridgeInput(Phidget
 		case PHIDUID_GENERIC_PHIDUSB:
 			len = getBridgePacketInt32(bp, 1);
 
-			if (len > (int)phid->OUTPacketLength[0])
-				len = (int)phid->OUTPacketLength[0];
+			if (len > (size_t)phid->OUTPacketLength[0])
+				len = (size_t)phid->OUTPacketLength[0];
 
 			ret = PhidgetDevice_transferpacket(bp->iop, (PhidgetDeviceHandle)phid, PHIDGETUSB_REQ_DEVICE_READ,
 				getBridgePacketInt32(bp, 0), 0,
diff -urp libphidget22-1.6.20200417.orig/src/phidget.c libphidget22-1.6.20200417/src/phidget.c
--- libphidget22-1.6.20200417.orig/src/phidget.c	2020-04-17 21:50:39.000000000 +0000
+++ libphidget22-1.6.20200417/src/phidget.c	2020-06-02 13:30:49.607480749 +0000
@@ -2317,7 +2317,7 @@ createPhidgetHIDUSBDevice(const PhidgetU
 #ifdef _WINDOWS
 	wcsncpy(conn->DevicePath, (const wchar_t *)devpath, MAX_PATH);
 #elif defined(_LINUX) || defined(_FREEBSD) && !defined(_ANDROID)
-	strncpy(conn->uniqueName, (const char *)devpath, 20);
+	strncpy(conn->uniqueName, (const char *)devpath, 19);
 #endif
 #if defined(_ANDROID)
 	mos_strncpy(conn->dev, (const char *)devpath, sizeof(conn->dev));
@@ -2348,7 +2348,7 @@ createPhidgetPHIDUSBDevice(const Phidget
 #ifdef _WINDOWS
 	wcsncpy(conn->DevicePath, (const wchar_t *)devpath, MAX_PATH);
 #elif defined(_LINUX) || defined(_FREEBSD) && !defined(_ANDROID)
-	strncpy(conn->uniqueName, (const char *)devpath, 20);
+	strncpy(conn->uniqueName, (const char *)devpath, 19);
 #endif
 #if defined(_ANDROID)
 	mos_strncpy(conn->dev, (const char *)devpath, sizeof(conn->dev));
